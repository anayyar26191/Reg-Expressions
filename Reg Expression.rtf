{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 CourierNewPSMT;\f2\fnil\fcharset0 Tahoma;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\fs36 Reg expression\

\fs48 https://regex101.com/
\fs24 \
\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
.
\f2 ,\'a0
\f1 +
\f2 ,\'a0
\f1 *
\f2 ,\'a0
\f1 ?
\f2 ,\'a0
\f1 ^
\f2 ,\'a0
\f1 $
\f2 ,\'a0
\f1 (
\f2 ,\'a0
\f1 )
\f2 ,\'a0
\f1 [
\f2 ,\'a0
\f1 ]
\f2 ,\'a0
\f1 \{
\f2 ,\'a0
\f1 \}
\f2 ,\'a0
\f1 |\
\
.\
+\
*\
?\
$\
(, )\
[, ]\
\{, \}\
|\
(\\char)\
\\.   matches\'94.\'94\
\\\\   matches \'93\\\'94\
\\n 	 matches \'93new line\'94\
\\t	 for tab\
\\r	 for carriage return\
\\nnn		octal\
\\xhh	    2-digit hex code\
\\nhhhh	4-digit unicode code\
\\\\uhhhhhhhh  8-digit unicode\
[aeiou]\
[0-9]\
[^\'85.]\
\
+: one or more(1+)\
*?  0 or more (0+)\
?:  0 ore 1 [+-]. Or an empty string\
\{m,n\} m to n\
\{m, \} m or more\
\
.(dot) Any one character except newline. Same as [^\\n]\
\\d, \\D  any one digit [0-9]\
\\w, \\W any one word  For ASCII [a-zA-Z0-9]\
|s, \\S any one space white space characters are [ \\n\\r\\t\\f]\
\
^,$: start of line and end of line ^[0-9]$ matches a numeric string\
\\b: boundary of word means start of word or end of word \\brat\\b matches rat\
\\B inverse of \\b non start of word or end of word\
\\<, \\> start of word or end of word similar to \\b\
\\A, \\z start of the input and end of the input\
\
use parentheses () to create a back reference\
Use $1,$2 (Java,Perl,JavaScript) or \\1, \\2, \'85.(Python) to retrieve the back references in sequential order.\
\
\
\
}